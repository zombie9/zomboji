{"version":3,"sources":["images/zomboji-1.png","images sync /^/.//.*$","images/zomboji-10.png","images/zomboji-11.png","images/zomboji-12.png","images/zomboji-13.png","images/zomboji-2.png","images/zomboji-3.png","images/zomboji-4.png","images/zomboji-5.png","images/zomboji-6.png","images/zomboji-7.png","images/zomboji-8.png","images/zomboji-9.png","components/customiser/canvas-layer.js","components/customiser/canvas.js","components/customiser/customiser-item.js","store/actions/customiserActions.js","components/customiser/customiser.js","components/customiser/header.js","components/zomboji.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/initState.js","store/reducers/customiserReducer.js","store/reducers/index.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","CanvasLayer","layer","option","selected","imgSrc","require","options","file","className","style","zIndex","zindex","src","alt","Canvas","layers","useSelector","state","customiser","zombojiBase","key","CustomiserItem","sliderValue","dispatch","useDispatch","name","Slider","value","step","marks","min","max","length","onChange","event","newValue","type","payload","index","Customiser","onClick","Header","Zomboji","App","Boolean","window","location","hostname","match","initState","authReducer","customiserReducer","action","range","Math","floor","random","rootReducer","combineReducers","auth","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cc553219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zomboji-1.45ea41ee.png\";","var map = {\n\t\"./zomboji-1.png\": 14,\n\t\"./zomboji-10.png\": 37,\n\t\"./zomboji-11.png\": 38,\n\t\"./zomboji-12.png\": 39,\n\t\"./zomboji-13.png\": 40,\n\t\"./zomboji-2.png\": 41,\n\t\"./zomboji-3.png\": 42,\n\t\"./zomboji-4.png\": 43,\n\t\"./zomboji-5.png\": 44,\n\t\"./zomboji-6.png\": 45,\n\t\"./zomboji-7.png\": 46,\n\t\"./zomboji-8.png\": 47,\n\t\"./zomboji-9.png\": 48\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 36;","module.exports = __webpack_public_path__ + \"static/media/zomboji-10.ea6536b1.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-11.9d9a1efa.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-12.4686f04c.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-13.94ef603c.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-2.4318651b.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-3.8c83f03f.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-4.486e760c.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-5.2e82e02b.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-6.5ac3a239.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-7.79838a63.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-8.f48ddce7.png\";","module.exports = __webpack_public_path__ + \"static/media/zomboji-9.1d3c7f24.png\";","import React from 'react';\n\nconst CanvasLayer = ({layer}) => {\n  const option = layer.selected - 1\n  const imgSrc = require(`../../images/${layer.options[option].file}`)\n  return (\n    <img\n      className=\"layer\"\n      style={{zIndex:`${layer.options[option].zindex}`}}\n      src={imgSrc}\n      alt={layer.options[option].file}>\n    </img>\n  )\n}\n\nexport default CanvasLayer;\n","import React from 'react';\nimport { useSelector } from 'react-redux'\nimport zombojiBase from '../../images/zomboji-1.png'\nimport CanvasLayer from './canvas-layer'\n\nconst Canvas = () => {\n  const layers = useSelector(state => state.customiser.layers)\n  return (\n    <div className=\"canvas\">\n      <img\n        className=\"d-block zomboji-base\"\n        src={zombojiBase}\n        alt=\"zomboji base\">\n      </img>\n      { layers && layers.map(layer => {\n        if (layer.selected) {\n          return <CanvasLayer layer={layer} key={layer.key}/>\n        } else {\n          return null\n        }\n      })}\n    </div>\n  )\n}\n\nexport default Canvas;\n","import React from 'react';\nimport { Slider } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setLayer } from '../../store/actions/customiserActions'\n\nconst CustomiserItem = ({layer}) => {\n  const sliderValue = useSelector(state => state.customiser.layers[layer.key-1].selected)\n  const dispatch = useDispatch()\n  let value\n  const handleChange = (event, newValue) => {\n    if (value !== newValue) {\n      dispatch(setLayer({\n        selected: newValue,\n        index: layer.key-1}))\n    }\n  }\n\n  return (\n    <div className=\"col-6 col-md-12 mb-3\">\n      <p>{layer.name}</p>\n      <Slider\n        value={sliderValue}\n        step={1}\n        marks\n        min={0}\n        max={layer.options.length}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default CustomiserItem;\n","export const setLayer = (newSelected) => {\n  return {\n    type: 'SET_LAYER',\n    payload: newSelected\n  }\n}\n\nexport const setRandom = () => {\n  return {\n    type: 'SET_RANDOM',\n  }\n}\n\nexport const reset = () => {\n  return {\n    type: 'RESET',\n  }\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport CustomiserItem from './customiser-item'\nimport { setRandom, reset } from '../../store/actions/customiserActions'\n\nconst Customiser = () => {\n  const layers = useSelector(state => state.customiser.layers)\n  const dispatch = useDispatch()\n  return (\n    <div className=\"h-100 d-flex align-items-center\">\n      <div className=\"customiser row\">\n        { layers && layers.map(layer => {\n          return (\n            <CustomiserItem layer={layer} key={layer.key} />\n          )\n        })}\n        <div className=\"col-6 col-md-12\">\n          <button onClick={() => dispatch(setRandom())}>randomize</button>\n        </div>\n        <div className=\"col-6 col-md-12\">\n          <button onClick={() => dispatch(reset())}>reset</button>\n        </div>       \n      </div>\n    </div>\n  );\n}\n\nexport default Customiser;\n","import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"h-100 d-flex align-items-center justify-content-center justify-content-md-end\">\n      <div className=\"header row d-flex align-items-center\">\n        <div className=\"col-6 col-md-12 text-md-right\">\n          <h1>zomboji</h1>\n        </div>\n        <div className=\"col-6 col-md-12 text-md-right\">\n          <p>zombie customiser</p>\n        </div>  \n      </div>     \n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Canvas from './customiser/canvas'\nimport Customiser from './customiser/customiser'\nimport Header from './customiser/header'\n\nconst Zomboji = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-3\"><Header /></div>\n        <div className=\"col-md-6\"><Canvas /></div>\n        <div className=\"col-md-3\"><Customiser /></div>\n      </div>\n    </div>\n  )\n}\n\nexport default Zomboji","import React from 'react';\nimport Zomboji from './components/zomboji'\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Zomboji />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {}\n\nconst authReducer = (state = initState, action) => {\n  return state\n}\n\nexport default authReducer\n","const initState = {\n  layers: [\n    {\n      key: 1,\n      name: 'head',\n      selected: 0,\n      options: [\n        {\n          id: 1,\n          zindex: 40,\n          file: 'zomboji-11.png'\n        },\n        {\n          id: 2,\n          zindex: 40,\n          file: 'zomboji-12.png'\n        },\n        {\n          id: 3,\n          zindex: 48,\n          file: 'zomboji-13.png'\n        }\n      ]\n    },\n    {\n      key: 2,\n      name: 'eyes',\n      selected: 0,\n      options: [\n        {\n          id: 1,\n          zindex: 30,\n          file: 'zomboji-8.png'\n        },\n        {\n          id: 2,\n          zindex: 45,\n          file: 'zomboji-9.png'\n        },\n        {\n          id: 3,\n          zindex: 30,\n          file: 'zomboji-10.png'\n        }\n      ]\n    },\n    {\n      key: 3,\n      name: 'nose',\n      selected: 0,\n      options: [\n        {\n          id: 1,\n          zindex: 20,\n          file: 'zomboji-5.png'\n        },\n        {\n          id: 2,\n          zindex: 20,\n          file: 'zomboji-6.png'\n        },\n        {\n          id: 3,\n          zindex: 20,\n          file: 'zomboji-7.png'\n        }\n      ]\n    },\n    {\n      key: 4,\n      name: 'beard',\n      selected: 0,\n      options: [\n        {\n          id: 1,\n          zindex: 10,\n          file: 'zomboji-2.png'\n        },\n        {\n          id: 2,\n          zindex: 10,\n          file: 'zomboji-3.png'\n        },\n        {\n          id: 3,\n          zindex: 10,\n          file: 'zomboji-4.png'\n        }\n      ]\n    }\n  ]\n}\n\nexport default initState\n","import initState from '../initState'\n\nconst customiserReducer = (state = initState, action) => {\n\n  switch (action.type) {\n\n    case 'SET_LAYER':\n      return {...state,\n        layers: state.layers.map((layer, index) => {\n          if (index === action.payload.index) {\n            return {...layer,\n              selected: action.payload.selected\n            }\n          }\n          return layer\n        })\n      }\n\n    case 'SET_RANDOM':\n      return {...state,\n        layers: state.layers.map(layer => {\n          const range = layer.options.length + 1\n          return {...layer,\n            selected: Math.floor(Math.random() * range)\n          }\n        })\n      }\n\n    case 'RESET':\n      return initState\n\n    default:\n      return state\n  }\n\n}\n\nexport default customiserReducer\n","import authReducer from './authReducer'\nimport customiserReducer from './customiserReducer'\nimport { combineReducers } from 'redux'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  customiser: customiserReducer\n})\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport rootReducer from './store/reducers'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}